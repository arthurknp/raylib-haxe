name: Build Windows, Ubuntu & OSX

on: [push, repository_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        haxe-version: [4.0.5, 4.1.5, 4.2.2]
        example: [3d-camera-free, 3d-picking, cubicmap, heightmap, postprocessing, waving-cubes, world-screen]

    steps:
    - uses: actions/checkout@v1
    - name: Setup Haxe (${{ matrix.example }}, haxe ${{ matrix.haxe-version }}, ${{ matrix.os }})
      uses: krdlab/setup-haxe@v1
      with:
        haxe-version: ${{ matrix.haxe-version }}

    - name: Install deps (${{ matrix.example }}, haxe ${{ matrix.haxe-version }}, ${{ matrix.os }})
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install libxinerama-dev
        sudo apt-get install libasound2-dev
        sudo apt-get install mesa-common-dev
        sudo apt-get install libgl-dev
        sudo apt-get install libxi-dev
        sudo apt-get install zip
        sudo apt-get install libxrandr-dev
        sudo apt-get install libudev-dev
        sudo apt-get install libx11-dev
        sudo apt-get install libxcursor-dev
        

    - name: Setup app (${{ matrix.example }}, haxe ${{ matrix.haxe-version }}, ${{ matrix.os }})
      run: |
        haxelib dev raylib-haxe .
        haxelib install hxcpp --always --quiet

    - name: Build app (${{ matrix.example }}, haxe ${{ matrix.haxe-version }}, ${{ matrix.os }})
      run: |
        cd examples/${{ matrix.example }}
        haxe build.hxml
